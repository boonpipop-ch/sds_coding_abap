*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSDSV_WBS_ACTTY.................................*
FORM GET_DATA_ZSDSV_WBS_ACTTY.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSDSPSC002 WHERE
(VIM_WHERETAB) .
    CLEAR ZSDSV_WBS_ACTTY .
ZSDSV_WBS_ACTTY-MANDT =
ZSDSPSC002-MANDT .
ZSDSV_WBS_ACTTY-PRJTY =
ZSDSPSC002-PRJTY .
ZSDSV_WBS_ACTTY-ITMTY =
ZSDSPSC002-ITMTY .
ZSDSV_WBS_ACTTY-ACTTY =
ZSDSPSC002-ACTTY .
ZSDSV_WBS_ACTTY-DESCP =
ZSDSPSC002-DESCP .
ZSDSV_WBS_ACTTY-REV_KSTAR =
ZSDSPSC002-REV_KSTAR .
ZSDSV_WBS_ACTTY-CST_KSTAR =
ZSDSPSC002-CST_KSTAR .
ZSDSV_WBS_ACTTY-ZDEL_FLG =
ZSDSPSC002-ZDEL_FLG .
ZSDSV_WBS_ACTTY-ZCRT_DATE =
ZSDSPSC002-ZCRT_DATE .
ZSDSV_WBS_ACTTY-ZCRT_TIME =
ZSDSPSC002-ZCRT_TIME .
ZSDSV_WBS_ACTTY-ZCRT_USER =
ZSDSPSC002-ZCRT_USER .
ZSDSV_WBS_ACTTY-ZCRT_PGM =
ZSDSPSC002-ZCRT_PGM .
ZSDSV_WBS_ACTTY-ZUPD_DATE =
ZSDSPSC002-ZUPD_DATE .
ZSDSV_WBS_ACTTY-ZUPD_TIME =
ZSDSPSC002-ZUPD_TIME .
ZSDSV_WBS_ACTTY-ZUPD_USER =
ZSDSPSC002-ZUPD_USER .
ZSDSV_WBS_ACTTY-ZUPD_PGM =
ZSDSPSC002-ZUPD_PGM .
<VIM_TOTAL_STRUC> = ZSDSV_WBS_ACTTY.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSDSV_WBS_ACTTY .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSDSV_WBS_ACTTY.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSDSV_WBS_ACTTY-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSDSPSC002 WHERE
  PRJTY = ZSDSV_WBS_ACTTY-PRJTY AND
  ITMTY = ZSDSV_WBS_ACTTY-ITMTY AND
  ACTTY = ZSDSV_WBS_ACTTY-ACTTY .
    IF SY-SUBRC = 0.
    DELETE ZSDSPSC002 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSDSPSC002 WHERE
  PRJTY = ZSDSV_WBS_ACTTY-PRJTY AND
  ITMTY = ZSDSV_WBS_ACTTY-ITMTY AND
  ACTTY = ZSDSV_WBS_ACTTY-ACTTY .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSDSPSC002.
    ENDIF.
ZSDSPSC002-MANDT =
ZSDSV_WBS_ACTTY-MANDT .
ZSDSPSC002-PRJTY =
ZSDSV_WBS_ACTTY-PRJTY .
ZSDSPSC002-ITMTY =
ZSDSV_WBS_ACTTY-ITMTY .
ZSDSPSC002-ACTTY =
ZSDSV_WBS_ACTTY-ACTTY .
ZSDSPSC002-DESCP =
ZSDSV_WBS_ACTTY-DESCP .
ZSDSPSC002-REV_KSTAR =
ZSDSV_WBS_ACTTY-REV_KSTAR .
ZSDSPSC002-CST_KSTAR =
ZSDSV_WBS_ACTTY-CST_KSTAR .
ZSDSPSC002-ZDEL_FLG =
ZSDSV_WBS_ACTTY-ZDEL_FLG .
ZSDSPSC002-ZCRT_DATE =
ZSDSV_WBS_ACTTY-ZCRT_DATE .
ZSDSPSC002-ZCRT_TIME =
ZSDSV_WBS_ACTTY-ZCRT_TIME .
ZSDSPSC002-ZCRT_USER =
ZSDSV_WBS_ACTTY-ZCRT_USER .
ZSDSPSC002-ZCRT_PGM =
ZSDSV_WBS_ACTTY-ZCRT_PGM .
ZSDSPSC002-ZUPD_DATE =
ZSDSV_WBS_ACTTY-ZUPD_DATE .
ZSDSPSC002-ZUPD_TIME =
ZSDSV_WBS_ACTTY-ZUPD_TIME .
ZSDSPSC002-ZUPD_USER =
ZSDSV_WBS_ACTTY-ZUPD_USER .
ZSDSPSC002-ZUPD_PGM =
ZSDSV_WBS_ACTTY-ZUPD_PGM .
    IF SY-SUBRC = 0.
    UPDATE ZSDSPSC002 ##WARN_OK.
    ELSE.
    INSERT ZSDSPSC002 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSDSV_WBS_ACTTY-UPD_FLAG,
STATUS_ZSDSV_WBS_ACTTY-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSDSV_WBS_ACTTY.
  SELECT SINGLE * FROM ZSDSPSC002 WHERE
PRJTY = ZSDSV_WBS_ACTTY-PRJTY AND
ITMTY = ZSDSV_WBS_ACTTY-ITMTY AND
ACTTY = ZSDSV_WBS_ACTTY-ACTTY .
ZSDSV_WBS_ACTTY-MANDT =
ZSDSPSC002-MANDT .
ZSDSV_WBS_ACTTY-PRJTY =
ZSDSPSC002-PRJTY .
ZSDSV_WBS_ACTTY-ITMTY =
ZSDSPSC002-ITMTY .
ZSDSV_WBS_ACTTY-ACTTY =
ZSDSPSC002-ACTTY .
ZSDSV_WBS_ACTTY-DESCP =
ZSDSPSC002-DESCP .
ZSDSV_WBS_ACTTY-REV_KSTAR =
ZSDSPSC002-REV_KSTAR .
ZSDSV_WBS_ACTTY-CST_KSTAR =
ZSDSPSC002-CST_KSTAR .
ZSDSV_WBS_ACTTY-ZDEL_FLG =
ZSDSPSC002-ZDEL_FLG .
ZSDSV_WBS_ACTTY-ZCRT_DATE =
ZSDSPSC002-ZCRT_DATE .
ZSDSV_WBS_ACTTY-ZCRT_TIME =
ZSDSPSC002-ZCRT_TIME .
ZSDSV_WBS_ACTTY-ZCRT_USER =
ZSDSPSC002-ZCRT_USER .
ZSDSV_WBS_ACTTY-ZCRT_PGM =
ZSDSPSC002-ZCRT_PGM .
ZSDSV_WBS_ACTTY-ZUPD_DATE =
ZSDSPSC002-ZUPD_DATE .
ZSDSV_WBS_ACTTY-ZUPD_TIME =
ZSDSPSC002-ZUPD_TIME .
ZSDSV_WBS_ACTTY-ZUPD_USER =
ZSDSPSC002-ZUPD_USER .
ZSDSV_WBS_ACTTY-ZUPD_PGM =
ZSDSPSC002-ZUPD_PGM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSDSV_WBS_ACTTY USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSDSV_WBS_ACTTY-PRJTY TO
ZSDSPSC002-PRJTY .
MOVE ZSDSV_WBS_ACTTY-ITMTY TO
ZSDSPSC002-ITMTY .
MOVE ZSDSV_WBS_ACTTY-ACTTY TO
ZSDSPSC002-ACTTY .
MOVE ZSDSV_WBS_ACTTY-MANDT TO
ZSDSPSC002-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSDSPSC002'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSDSPSC002 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSDSPSC002'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
