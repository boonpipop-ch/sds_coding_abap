class ZCL_ZSDSMM_SONY_INTERF_DPC_EXT definition
  public
  inheriting from ZCL_ZSDSMM_SONY_INTERF_DPC
  create public .

public section.

  constants:
    BEGIN OF GC_CON,
                  UPDATE_SERIAL_SET TYPE C LENGTH 15 VALUE 'UpdateSerialSet',
                  DO_STATUS         TYPE C LENGTH 11 VALUE 'doStatusSet',
                  SMART_TRACK       TYPE c LENGTH 13 VALUE 'smartTrackSet',
                END OF GC_CON .

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
protected section.

  methods DOSTATUSSET_GET_ENTITYSET
    redefinition .
  methods UPDATESERIALSET_GET_ENTITYSET
    redefinition .
  methods SMARTTRACKSET_GET_ENTITYSET
    redefinition .
private section.
ENDCLASS.



CLASS ZCL_ZSDSMM_SONY_INTERF_DPC_EXT IMPLEMENTATION.


  METHOD /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY.
    FIELD-SYMBOLS <LFS_DATA> TYPE ANY.

    DATA LS_DATA TYPE ZSDSSDS019.

    DATA LS_DO_DATA TYPE ZSDSSDS116.

    DATA LS_SMART_DATA TYPE ZSDSSDS130.

    DATA LS_TMP LIKE LS_DATA.

    IF IO_DATA_PROVIDER IS NOT INITIAL.
      IF     IV_ENTITY_SET_NAME EQ GC_CON-UPDATE_SERIAL_SET.
        IO_DATA_PROVIDER->READ_ENTRY_DATA( IMPORTING ES_DATA = LS_DATA ).
        LS_TMP = LS_DATA.
        READ TABLE LS_DATA-DETAIL INTO DATA(LS_DETAIL) INDEX 1.
        DATA(LV_DELIVERY) = LS_DETAIL-DELIVERY.
        REPLACE ALL OCCURRENCES OF PCRE '[ ]+' IN LV_DELIVERY WITH ''.
        IF LV_DELIVERY+0(1) EQ 'H'.
          LS_DATA = LCL_DATA=>UPDATE_SERIAL_HOLD( LS_DATA ).
        ELSE.
          LS_DATA = LCL_DATA=>UPDATE_SERIAL( LS_DATA ).
        ENDIF.
        IF LS_DATA IS NOT INITIAL.
          ASSIGN LS_DATA TO <LFS_DATA>.
        ELSE.
          ASSIGN LS_TMP TO <LFS_DATA>.
        ENDIF.
      ELSEIF IV_ENTITY_SET_NAME EQ GC_CON-DO_STATUS.
        IO_DATA_PROVIDER->READ_ENTRY_DATA( IMPORTING ES_DATA = LS_DO_DATA ).
        LCL_DATA=>UPDATE_DO_STATUS( CHANGING C_DATA = LS_DO_DATA ).
        ASSIGN LS_DO_DATA TO <LFS_DATA>.
      ELSEIF IV_ENTITY_SET_NAME EQ GC_CON-SMART_TRACK.
        IO_DATA_PROVIDER->READ_ENTRY_DATA( IMPORTING ES_DATA = LS_SMART_DATA ).
        LCL_DATA=>UPDATE_SMART_TRACK( CHANGING C_DATA = LS_SMART_DATA ).
        ASSIGN LS_DO_DATA TO <LFS_DATA>.
      ENDIF.
    ENDIF.

    COPY_DATA_TO_REF(
       EXPORTING
       IS_DATA = <LFS_DATA>
       CHANGING
       CR_DATA = ER_DEEP_ENTITY
       ).
  ENDMETHOD.


  method DOSTATUSSET_GET_ENTITYSET.
**TRY.
*CALL METHOD SUPER->DOSTATUSSET_GET_ENTITYSET
*  EXPORTING
*    IV_ENTITY_NAME           =
*    IV_ENTITY_SET_NAME       =
*    IV_SOURCE_NAME           =
*    IT_FILTER_SELECT_OPTIONS =
*    IS_PAGING                =
*    IT_KEY_TAB               =
*    IT_NAVIGATION_PATH       =
*    IT_ORDER                 =
*    IV_FILTER_STRING         =
*    IV_SEARCH_STRING         =
**    IO_TECH_REQUEST_CONTEXT  =
**  IMPORTING
**    ET_ENTITYSET             =
**    ES_RESPONSE_CONTEXT      =
*    .
**  CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
**  CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
**ENDTRY.
  endmethod.


  method SMARTTRACKSET_GET_ENTITYSET.
**TRY.
*CALL METHOD SUPER->SMARTTRACKSET_GET_ENTITYSET
*  EXPORTING
*    IV_ENTITY_NAME           =
*    IV_ENTITY_SET_NAME       =
*    IV_SOURCE_NAME           =
*    IT_FILTER_SELECT_OPTIONS =
*    IS_PAGING                =
*    IT_KEY_TAB               =
*    IT_NAVIGATION_PATH       =
*    IT_ORDER                 =
*    IV_FILTER_STRING         =
*    IV_SEARCH_STRING         =
**    IO_TECH_REQUEST_CONTEXT  =
**  IMPORTING
**    ET_ENTITYSET             =
**    ES_RESPONSE_CONTEXT      =
*    .
**  CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
**  CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
**ENDTRY.
  endmethod.


  method UPDATESERIALSET_GET_ENTITYSET.
**TRY.
*CALL METHOD SUPER->UPDATESERIALSET_GET_ENTITYSET
*  EXPORTING
*    IV_ENTITY_NAME           =
*    IV_ENTITY_SET_NAME       =
*    IV_SOURCE_NAME           =
*    IT_FILTER_SELECT_OPTIONS =
*    IS_PAGING                =
*    IT_KEY_TAB               =
*    IT_NAVIGATION_PATH       =
*    IT_ORDER                 =
*    IV_FILTER_STRING         =
*    IV_SEARCH_STRING         =
**    IO_TECH_REQUEST_CONTEXT  =
**  IMPORTING
**    ET_ENTITYSET             =
**    ES_RESPONSE_CONTEXT      =
*    .
**  CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
**  CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
**ENDTRY.
  endmethod.
ENDCLASS.
