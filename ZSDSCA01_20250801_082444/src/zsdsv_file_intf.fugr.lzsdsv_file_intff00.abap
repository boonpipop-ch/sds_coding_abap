*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSDSV_FILE_INTF.................................*
FORM GET_DATA_ZSDSV_FILE_INTF.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSDSCAC004 WHERE
(VIM_WHERETAB) .
    CLEAR ZSDSV_FILE_INTF .
ZSDSV_FILE_INTF-MANDT =
ZSDSCAC004-MANDT .
ZSDSV_FILE_INTF-INTFNO =
ZSDSCAC004-INTFNO .
ZSDSV_FILE_INTF-SYSID =
ZSDSCAC004-SYSID .
ZSDSV_FILE_INTF-DESCP =
ZSDSCAC004-DESCP .
ZSDSV_FILE_INTF-PATHINTERN =
ZSDSCAC004-PATHINTERN .
ZSDSV_FILE_INTF-INOUT_FLAG =
ZSDSCAC004-INOUT_FLAG .
ZSDSV_FILE_INTF-SYSNAME =
ZSDSCAC004-SYSNAME .
ZSDSV_FILE_INTF-WRICEF =
ZSDSCAC004-WRICEF .
ZSDSV_FILE_INTF-AUTOSUBFOLDER =
ZSDSCAC004-AUTOSUBFOLDER .
ZSDSV_FILE_INTF-ZDEL_FLG =
ZSDSCAC004-ZDEL_FLG .
ZSDSV_FILE_INTF-ZCRT_DATE =
ZSDSCAC004-ZCRT_DATE .
ZSDSV_FILE_INTF-ZCRT_TIME =
ZSDSCAC004-ZCRT_TIME .
ZSDSV_FILE_INTF-ZCRT_USER =
ZSDSCAC004-ZCRT_USER .
ZSDSV_FILE_INTF-ZCRT_PGM =
ZSDSCAC004-ZCRT_PGM .
ZSDSV_FILE_INTF-ZUPD_DATE =
ZSDSCAC004-ZUPD_DATE .
ZSDSV_FILE_INTF-ZUPD_TIME =
ZSDSCAC004-ZUPD_TIME .
ZSDSV_FILE_INTF-ZUPD_USER =
ZSDSCAC004-ZUPD_USER .
ZSDSV_FILE_INTF-ZUPD_PGM =
ZSDSCAC004-ZUPD_PGM .
<VIM_TOTAL_STRUC> = ZSDSV_FILE_INTF.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSDSV_FILE_INTF .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSDSV_FILE_INTF.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSDSV_FILE_INTF-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC004 WHERE
  INTFNO = ZSDSV_FILE_INTF-INTFNO AND
  SYSID = ZSDSV_FILE_INTF-SYSID .
    IF SY-SUBRC = 0.
    DELETE ZSDSCAC004 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC004 WHERE
  INTFNO = ZSDSV_FILE_INTF-INTFNO AND
  SYSID = ZSDSV_FILE_INTF-SYSID .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSDSCAC004.
    ENDIF.
ZSDSCAC004-MANDT =
ZSDSV_FILE_INTF-MANDT .
ZSDSCAC004-INTFNO =
ZSDSV_FILE_INTF-INTFNO .
ZSDSCAC004-SYSID =
ZSDSV_FILE_INTF-SYSID .
ZSDSCAC004-DESCP =
ZSDSV_FILE_INTF-DESCP .
ZSDSCAC004-PATHINTERN =
ZSDSV_FILE_INTF-PATHINTERN .
ZSDSCAC004-INOUT_FLAG =
ZSDSV_FILE_INTF-INOUT_FLAG .
ZSDSCAC004-SYSNAME =
ZSDSV_FILE_INTF-SYSNAME .
ZSDSCAC004-WRICEF =
ZSDSV_FILE_INTF-WRICEF .
ZSDSCAC004-AUTOSUBFOLDER =
ZSDSV_FILE_INTF-AUTOSUBFOLDER .
ZSDSCAC004-ZDEL_FLG =
ZSDSV_FILE_INTF-ZDEL_FLG .
ZSDSCAC004-ZCRT_DATE =
ZSDSV_FILE_INTF-ZCRT_DATE .
ZSDSCAC004-ZCRT_TIME =
ZSDSV_FILE_INTF-ZCRT_TIME .
ZSDSCAC004-ZCRT_USER =
ZSDSV_FILE_INTF-ZCRT_USER .
ZSDSCAC004-ZCRT_PGM =
ZSDSV_FILE_INTF-ZCRT_PGM .
ZSDSCAC004-ZUPD_DATE =
ZSDSV_FILE_INTF-ZUPD_DATE .
ZSDSCAC004-ZUPD_TIME =
ZSDSV_FILE_INTF-ZUPD_TIME .
ZSDSCAC004-ZUPD_USER =
ZSDSV_FILE_INTF-ZUPD_USER .
ZSDSCAC004-ZUPD_PGM =
ZSDSV_FILE_INTF-ZUPD_PGM .
    IF SY-SUBRC = 0.
    UPDATE ZSDSCAC004 ##WARN_OK.
    ELSE.
    INSERT ZSDSCAC004 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSDSV_FILE_INTF-UPD_FLAG,
STATUS_ZSDSV_FILE_INTF-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSDSV_FILE_INTF.
  SELECT SINGLE * FROM ZSDSCAC004 WHERE
INTFNO = ZSDSV_FILE_INTF-INTFNO AND
SYSID = ZSDSV_FILE_INTF-SYSID .
ZSDSV_FILE_INTF-MANDT =
ZSDSCAC004-MANDT .
ZSDSV_FILE_INTF-INTFNO =
ZSDSCAC004-INTFNO .
ZSDSV_FILE_INTF-SYSID =
ZSDSCAC004-SYSID .
ZSDSV_FILE_INTF-DESCP =
ZSDSCAC004-DESCP .
ZSDSV_FILE_INTF-PATHINTERN =
ZSDSCAC004-PATHINTERN .
ZSDSV_FILE_INTF-INOUT_FLAG =
ZSDSCAC004-INOUT_FLAG .
ZSDSV_FILE_INTF-SYSNAME =
ZSDSCAC004-SYSNAME .
ZSDSV_FILE_INTF-WRICEF =
ZSDSCAC004-WRICEF .
ZSDSV_FILE_INTF-AUTOSUBFOLDER =
ZSDSCAC004-AUTOSUBFOLDER .
ZSDSV_FILE_INTF-ZDEL_FLG =
ZSDSCAC004-ZDEL_FLG .
ZSDSV_FILE_INTF-ZCRT_DATE =
ZSDSCAC004-ZCRT_DATE .
ZSDSV_FILE_INTF-ZCRT_TIME =
ZSDSCAC004-ZCRT_TIME .
ZSDSV_FILE_INTF-ZCRT_USER =
ZSDSCAC004-ZCRT_USER .
ZSDSV_FILE_INTF-ZCRT_PGM =
ZSDSCAC004-ZCRT_PGM .
ZSDSV_FILE_INTF-ZUPD_DATE =
ZSDSCAC004-ZUPD_DATE .
ZSDSV_FILE_INTF-ZUPD_TIME =
ZSDSCAC004-ZUPD_TIME .
ZSDSV_FILE_INTF-ZUPD_USER =
ZSDSCAC004-ZUPD_USER .
ZSDSV_FILE_INTF-ZUPD_PGM =
ZSDSCAC004-ZUPD_PGM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSDSV_FILE_INTF USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSDSV_FILE_INTF-INTFNO TO
ZSDSCAC004-INTFNO .
MOVE ZSDSV_FILE_INTF-SYSID TO
ZSDSCAC004-SYSID .
MOVE ZSDSV_FILE_INTF-MANDT TO
ZSDSCAC004-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSDSCAC004'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSDSCAC004 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSDSCAC004'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
