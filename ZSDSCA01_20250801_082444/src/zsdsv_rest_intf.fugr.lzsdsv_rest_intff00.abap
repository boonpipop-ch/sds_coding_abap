*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSDSV_REST_INTF.................................*
FORM GET_DATA_ZSDSV_REST_INTF.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSDSCAC005 WHERE
(VIM_WHERETAB) .
    CLEAR ZSDSV_REST_INTF .
ZSDSV_REST_INTF-MANDT =
ZSDSCAC005-MANDT .
ZSDSV_REST_INTF-INTFNO =
ZSDSCAC005-INTFNO .
ZSDSV_REST_INTF-DESCP =
ZSDSCAC005-DESCP .
ZSDSV_REST_INTF-INTTY =
ZSDSCAC005-INTTY .
ZSDSV_REST_INTF-NRNR =
ZSDSCAC005-NRNR .
ZSDSV_REST_INTF-REQUEST_STRUC =
ZSDSCAC005-REQUEST_STRUC .
ZSDSV_REST_INTF-KEYDATA =
ZSDSCAC005-KEYDATA .
ZSDSV_REST_INTF-RESPONSE_STRUC =
ZSDSCAC005-RESPONSE_STRUC .
ZSDSV_REST_INTF-ENDPOINT =
ZSDSCAC005-ENDPOINT .
ZSDSV_REST_INTF-PROCESS_CLASS =
ZSDSCAC005-PROCESS_CLASS .
ZSDSV_REST_INTF-TRANSFORM_REQ =
ZSDSCAC005-TRANSFORM_REQ .
ZSDSV_REST_INTF-TRANSFORM_RES =
ZSDSCAC005-TRANSFORM_RES .
ZSDSV_REST_INTF-URL =
ZSDSCAC005-URL .
ZSDSV_REST_INTF-USERID =
ZSDSCAC005-USERID .
ZSDSV_REST_INTF-PASSWD =
ZSDSCAC005-PASSWD .
ZSDSV_REST_INTF-METHOD =
ZSDSCAC005-METHOD .
ZSDSV_REST_INTF-ZDEL_FLG =
ZSDSCAC005-ZDEL_FLG .
ZSDSV_REST_INTF-ZCRT_DATE =
ZSDSCAC005-ZCRT_DATE .
ZSDSV_REST_INTF-ZCRT_TIME =
ZSDSCAC005-ZCRT_TIME .
ZSDSV_REST_INTF-ZCRT_USER =
ZSDSCAC005-ZCRT_USER .
ZSDSV_REST_INTF-ZCRT_PGM =
ZSDSCAC005-ZCRT_PGM .
ZSDSV_REST_INTF-ZUPD_DATE =
ZSDSCAC005-ZUPD_DATE .
ZSDSV_REST_INTF-ZUPD_TIME =
ZSDSCAC005-ZUPD_TIME .
ZSDSV_REST_INTF-ZUPD_USER =
ZSDSCAC005-ZUPD_USER .
ZSDSV_REST_INTF-ZUPD_PGM =
ZSDSCAC005-ZUPD_PGM .
<VIM_TOTAL_STRUC> = ZSDSV_REST_INTF.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSDSV_REST_INTF .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSDSV_REST_INTF.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSDSV_REST_INTF-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC005 WHERE
  INTFNO = ZSDSV_REST_INTF-INTFNO .
    IF SY-SUBRC = 0.
    DELETE ZSDSCAC005 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC005 WHERE
  INTFNO = ZSDSV_REST_INTF-INTFNO .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSDSCAC005.
    ENDIF.
ZSDSCAC005-MANDT =
ZSDSV_REST_INTF-MANDT .
ZSDSCAC005-INTFNO =
ZSDSV_REST_INTF-INTFNO .
ZSDSCAC005-DESCP =
ZSDSV_REST_INTF-DESCP .
ZSDSCAC005-INTTY =
ZSDSV_REST_INTF-INTTY .
ZSDSCAC005-NRNR =
ZSDSV_REST_INTF-NRNR .
ZSDSCAC005-REQUEST_STRUC =
ZSDSV_REST_INTF-REQUEST_STRUC .
ZSDSCAC005-KEYDATA =
ZSDSV_REST_INTF-KEYDATA .
ZSDSCAC005-RESPONSE_STRUC =
ZSDSV_REST_INTF-RESPONSE_STRUC .
ZSDSCAC005-ENDPOINT =
ZSDSV_REST_INTF-ENDPOINT .
ZSDSCAC005-PROCESS_CLASS =
ZSDSV_REST_INTF-PROCESS_CLASS .
ZSDSCAC005-TRANSFORM_REQ =
ZSDSV_REST_INTF-TRANSFORM_REQ .
ZSDSCAC005-TRANSFORM_RES =
ZSDSV_REST_INTF-TRANSFORM_RES .
ZSDSCAC005-URL =
ZSDSV_REST_INTF-URL .
ZSDSCAC005-USERID =
ZSDSV_REST_INTF-USERID .
ZSDSCAC005-PASSWD =
ZSDSV_REST_INTF-PASSWD .
ZSDSCAC005-METHOD =
ZSDSV_REST_INTF-METHOD .
ZSDSCAC005-ZDEL_FLG =
ZSDSV_REST_INTF-ZDEL_FLG .
ZSDSCAC005-ZCRT_DATE =
ZSDSV_REST_INTF-ZCRT_DATE .
ZSDSCAC005-ZCRT_TIME =
ZSDSV_REST_INTF-ZCRT_TIME .
ZSDSCAC005-ZCRT_USER =
ZSDSV_REST_INTF-ZCRT_USER .
ZSDSCAC005-ZCRT_PGM =
ZSDSV_REST_INTF-ZCRT_PGM .
ZSDSCAC005-ZUPD_DATE =
ZSDSV_REST_INTF-ZUPD_DATE .
ZSDSCAC005-ZUPD_TIME =
ZSDSV_REST_INTF-ZUPD_TIME .
ZSDSCAC005-ZUPD_USER =
ZSDSV_REST_INTF-ZUPD_USER .
ZSDSCAC005-ZUPD_PGM =
ZSDSV_REST_INTF-ZUPD_PGM .
    IF SY-SUBRC = 0.
    UPDATE ZSDSCAC005 ##WARN_OK.
    ELSE.
    INSERT ZSDSCAC005 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSDSV_REST_INTF-UPD_FLAG,
STATUS_ZSDSV_REST_INTF-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSDSV_REST_INTF.
  SELECT SINGLE * FROM ZSDSCAC005 WHERE
INTFNO = ZSDSV_REST_INTF-INTFNO .
ZSDSV_REST_INTF-MANDT =
ZSDSCAC005-MANDT .
ZSDSV_REST_INTF-INTFNO =
ZSDSCAC005-INTFNO .
ZSDSV_REST_INTF-DESCP =
ZSDSCAC005-DESCP .
ZSDSV_REST_INTF-INTTY =
ZSDSCAC005-INTTY .
ZSDSV_REST_INTF-NRNR =
ZSDSCAC005-NRNR .
ZSDSV_REST_INTF-REQUEST_STRUC =
ZSDSCAC005-REQUEST_STRUC .
ZSDSV_REST_INTF-KEYDATA =
ZSDSCAC005-KEYDATA .
ZSDSV_REST_INTF-RESPONSE_STRUC =
ZSDSCAC005-RESPONSE_STRUC .
ZSDSV_REST_INTF-ENDPOINT =
ZSDSCAC005-ENDPOINT .
ZSDSV_REST_INTF-PROCESS_CLASS =
ZSDSCAC005-PROCESS_CLASS .
ZSDSV_REST_INTF-TRANSFORM_REQ =
ZSDSCAC005-TRANSFORM_REQ .
ZSDSV_REST_INTF-TRANSFORM_RES =
ZSDSCAC005-TRANSFORM_RES .
ZSDSV_REST_INTF-URL =
ZSDSCAC005-URL .
ZSDSV_REST_INTF-USERID =
ZSDSCAC005-USERID .
ZSDSV_REST_INTF-PASSWD =
ZSDSCAC005-PASSWD .
ZSDSV_REST_INTF-METHOD =
ZSDSCAC005-METHOD .
ZSDSV_REST_INTF-ZDEL_FLG =
ZSDSCAC005-ZDEL_FLG .
ZSDSV_REST_INTF-ZCRT_DATE =
ZSDSCAC005-ZCRT_DATE .
ZSDSV_REST_INTF-ZCRT_TIME =
ZSDSCAC005-ZCRT_TIME .
ZSDSV_REST_INTF-ZCRT_USER =
ZSDSCAC005-ZCRT_USER .
ZSDSV_REST_INTF-ZCRT_PGM =
ZSDSCAC005-ZCRT_PGM .
ZSDSV_REST_INTF-ZUPD_DATE =
ZSDSCAC005-ZUPD_DATE .
ZSDSV_REST_INTF-ZUPD_TIME =
ZSDSCAC005-ZUPD_TIME .
ZSDSV_REST_INTF-ZUPD_USER =
ZSDSCAC005-ZUPD_USER .
ZSDSV_REST_INTF-ZUPD_PGM =
ZSDSCAC005-ZUPD_PGM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSDSV_REST_INTF USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSDSV_REST_INTF-INTFNO TO
ZSDSCAC005-INTFNO .
MOVE ZSDSV_REST_INTF-MANDT TO
ZSDSCAC005-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSDSCAC005'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSDSCAC005 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSDSCAC005'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
