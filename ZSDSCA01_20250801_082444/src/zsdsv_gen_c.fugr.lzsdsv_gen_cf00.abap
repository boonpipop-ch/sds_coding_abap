*---------------------------------------------------------------------*
*    view related FORM routines
*---------------------------------------------------------------------*
*...processing: ZSDSV_GEN_C.....................................*
FORM GET_DATA_ZSDSV_GEN_C.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZSDSCAC001 WHERE
(VIM_WHERETAB) .
    CLEAR ZSDSV_GEN_C .
ZSDSV_GEN_C-MANDT =
ZSDSCAC001-MANDT .
ZSDSV_GEN_C-REPID =
ZSDSCAC001-REPID .
ZSDSV_GEN_C-PARAM =
ZSDSCAC001-PARAM .
ZSDSV_GEN_C-PARAM_EXT =
ZSDSCAC001-PARAM_EXT .
ZSDSV_GEN_C-SEQUENCE =
ZSDSCAC001-SEQUENCE .
ZSDSV_GEN_C-PARAM_SIGN =
ZSDSCAC001-PARAM_SIGN .
ZSDSV_GEN_C-PARAM_OPTION =
ZSDSCAC001-PARAM_OPTION .
ZSDSV_GEN_C-VALUE_LOW =
ZSDSCAC001-VALUE_LOW .
ZSDSV_GEN_C-VALUE_HIGH =
ZSDSCAC001-VALUE_HIGH .
ZSDSV_GEN_C-VDESC =
ZSDSCAC001-VDESC .
ZSDSV_GEN_C-ZDEL_FLG =
ZSDSCAC001-ZDEL_FLG .
ZSDSV_GEN_C-ZCRT_DATE =
ZSDSCAC001-ZCRT_DATE .
ZSDSV_GEN_C-ZCRT_TIME =
ZSDSCAC001-ZCRT_TIME .
ZSDSV_GEN_C-ZCRT_USER =
ZSDSCAC001-ZCRT_USER .
ZSDSV_GEN_C-ZCRT_PGM =
ZSDSCAC001-ZCRT_PGM .
ZSDSV_GEN_C-ZUPD_DATE =
ZSDSCAC001-ZUPD_DATE .
ZSDSV_GEN_C-ZUPD_TIME =
ZSDSCAC001-ZUPD_TIME .
ZSDSV_GEN_C-ZUPD_USER =
ZSDSCAC001-ZUPD_USER .
ZSDSV_GEN_C-ZUPD_PGM =
ZSDSCAC001-ZUPD_PGM .
<VIM_TOTAL_STRUC> = ZSDSV_GEN_C.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZSDSV_GEN_C .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZSDSV_GEN_C.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZSDSV_GEN_C-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC001 WHERE
  REPID = ZSDSV_GEN_C-REPID AND
  PARAM = ZSDSV_GEN_C-PARAM AND
  PARAM_EXT = ZSDSV_GEN_C-PARAM_EXT AND
  SEQUENCE = ZSDSV_GEN_C-SEQUENCE .
    IF SY-SUBRC = 0.
    DELETE ZSDSCAC001 .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZSDSCAC001 WHERE
  REPID = ZSDSV_GEN_C-REPID AND
  PARAM = ZSDSV_GEN_C-PARAM AND
  PARAM_EXT = ZSDSV_GEN_C-PARAM_EXT AND
  SEQUENCE = ZSDSV_GEN_C-SEQUENCE .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZSDSCAC001.
    ENDIF.
ZSDSCAC001-MANDT =
ZSDSV_GEN_C-MANDT .
ZSDSCAC001-REPID =
ZSDSV_GEN_C-REPID .
ZSDSCAC001-PARAM =
ZSDSV_GEN_C-PARAM .
ZSDSCAC001-PARAM_EXT =
ZSDSV_GEN_C-PARAM_EXT .
ZSDSCAC001-SEQUENCE =
ZSDSV_GEN_C-SEQUENCE .
ZSDSCAC001-PARAM_SIGN =
ZSDSV_GEN_C-PARAM_SIGN .
ZSDSCAC001-PARAM_OPTION =
ZSDSV_GEN_C-PARAM_OPTION .
ZSDSCAC001-VALUE_LOW =
ZSDSV_GEN_C-VALUE_LOW .
ZSDSCAC001-VALUE_HIGH =
ZSDSV_GEN_C-VALUE_HIGH .
ZSDSCAC001-VDESC =
ZSDSV_GEN_C-VDESC .
ZSDSCAC001-ZDEL_FLG =
ZSDSV_GEN_C-ZDEL_FLG .
ZSDSCAC001-ZCRT_DATE =
ZSDSV_GEN_C-ZCRT_DATE .
ZSDSCAC001-ZCRT_TIME =
ZSDSV_GEN_C-ZCRT_TIME .
ZSDSCAC001-ZCRT_USER =
ZSDSV_GEN_C-ZCRT_USER .
ZSDSCAC001-ZCRT_PGM =
ZSDSV_GEN_C-ZCRT_PGM .
ZSDSCAC001-ZUPD_DATE =
ZSDSV_GEN_C-ZUPD_DATE .
ZSDSCAC001-ZUPD_TIME =
ZSDSV_GEN_C-ZUPD_TIME .
ZSDSCAC001-ZUPD_USER =
ZSDSV_GEN_C-ZUPD_USER .
ZSDSCAC001-ZUPD_PGM =
ZSDSV_GEN_C-ZUPD_PGM .
    IF SY-SUBRC = 0.
    UPDATE ZSDSCAC001 ##WARN_OK.
    ELSE.
    INSERT ZSDSCAC001 .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZSDSV_GEN_C-UPD_FLAG,
STATUS_ZSDSV_GEN_C-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZSDSV_GEN_C.
  SELECT SINGLE * FROM ZSDSCAC001 WHERE
REPID = ZSDSV_GEN_C-REPID AND
PARAM = ZSDSV_GEN_C-PARAM AND
PARAM_EXT = ZSDSV_GEN_C-PARAM_EXT AND
SEQUENCE = ZSDSV_GEN_C-SEQUENCE .
ZSDSV_GEN_C-MANDT =
ZSDSCAC001-MANDT .
ZSDSV_GEN_C-REPID =
ZSDSCAC001-REPID .
ZSDSV_GEN_C-PARAM =
ZSDSCAC001-PARAM .
ZSDSV_GEN_C-PARAM_EXT =
ZSDSCAC001-PARAM_EXT .
ZSDSV_GEN_C-SEQUENCE =
ZSDSCAC001-SEQUENCE .
ZSDSV_GEN_C-PARAM_SIGN =
ZSDSCAC001-PARAM_SIGN .
ZSDSV_GEN_C-PARAM_OPTION =
ZSDSCAC001-PARAM_OPTION .
ZSDSV_GEN_C-VALUE_LOW =
ZSDSCAC001-VALUE_LOW .
ZSDSV_GEN_C-VALUE_HIGH =
ZSDSCAC001-VALUE_HIGH .
ZSDSV_GEN_C-VDESC =
ZSDSCAC001-VDESC .
ZSDSV_GEN_C-ZDEL_FLG =
ZSDSCAC001-ZDEL_FLG .
ZSDSV_GEN_C-ZCRT_DATE =
ZSDSCAC001-ZCRT_DATE .
ZSDSV_GEN_C-ZCRT_TIME =
ZSDSCAC001-ZCRT_TIME .
ZSDSV_GEN_C-ZCRT_USER =
ZSDSCAC001-ZCRT_USER .
ZSDSV_GEN_C-ZCRT_PGM =
ZSDSCAC001-ZCRT_PGM .
ZSDSV_GEN_C-ZUPD_DATE =
ZSDSCAC001-ZUPD_DATE .
ZSDSV_GEN_C-ZUPD_TIME =
ZSDSCAC001-ZUPD_TIME .
ZSDSV_GEN_C-ZUPD_USER =
ZSDSCAC001-ZUPD_USER .
ZSDSV_GEN_C-ZUPD_PGM =
ZSDSCAC001-ZUPD_PGM .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZSDSV_GEN_C USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZSDSV_GEN_C-REPID TO
ZSDSCAC001-REPID .
MOVE ZSDSV_GEN_C-PARAM TO
ZSDSCAC001-PARAM .
MOVE ZSDSV_GEN_C-PARAM_EXT TO
ZSDSCAC001-PARAM_EXT .
MOVE ZSDSV_GEN_C-SEQUENCE TO
ZSDSCAC001-SEQUENCE .
MOVE ZSDSV_GEN_C-MANDT TO
ZSDSCAC001-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZSDSCAC001'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZSDSCAC001 TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZSDSCAC001'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
