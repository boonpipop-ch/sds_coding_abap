FUNCTION Z_SDSFI_POST_ADVANCE.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     VALUE(I_INPUT) TYPE  ZSDSFIS013 OPTIONAL
*"     VALUE(IT_GL) TYPE  ZSDSFIS014_TT OPTIONAL
*"  EXPORTING
*"     VALUE(E_OUTPUT) TYPE  BELNR_D
*"     VALUE(E_MESSAGE) TYPE  CHAR255
*"----------------------------------------------------------------------

** Demo
*  IF I_INPUT-XBLNR = 'ADV20240130-ERR'.
*    E_OUTPUT  = I_INPUT-BUDAT.
*    E_MESSAGE = 'Detail cannot blank'.
*
*  ELSEIF I_INPUT-XBLNR = 'DIL'.
*
*  ELSE.
**    E_OUTPUT  = '2010000001'.
*    E_OUTPUT  = I_INPUT-BUDAT.
*    E_MESSAGE = 'Data have been saved'.
*  ENDIF.
** End Demo

  DATA : LV_DOCUMENTHEADER TYPE BAPIACHE09,
         LT_ACCOUNTGL      TYPE TABLE OF BAPIACGL09,
         LS_ACCOUNTGL      TYPE BAPIACGL09,
         LT_ACCOUNTPAYABLE TYPE TABLE OF BAPIACAP09,
         LS_ACCOUNTPAYABLE TYPE BAPIACAP09,
*         lt_accountreceivable  TYPE TABLE OF bapiacar09,
*         ls_accountreceivable  TYPE bapiacar09,
         LT_CURRENCYAMOUNT TYPE TABLE OF BAPIACCR09,
         LS_CURRENCYAMOUNT TYPE BAPIACCR09,
         LT_RETURN         TYPE TABLE OF BAPIRET2 WITH HEADER LINE,
         LS_RETURN         TYPE BAPIRET2,
         LT_EXTENSION2     TYPE TABLE OF BAPIPAREX,
         LS_EXTENSION2     TYPE BAPIPAREX,
         LT_ACCOUNTTAX     TYPE TABLE OF BAPIACTX09,
         LS_ACCOUNTTAX     TYPE BAPIACTX09,
         LT_ACCOUNTWT      TYPE TABLE OF  BAPIACWT09,
         LS_ACCOUNTWT      TYPE BAPIACWT09,
         LT_EXTENSION      TYPE TABLE OF BAPIACEXTC,
         LS_EXTENSION      TYPE BAPIACEXTC.

  DATA : LS_GL TYPE ZSDSFIS014.

  DATA : BEGIN OF LS_TBSL,
           BSCHL TYPE TBSL-BSCHL,
           SHKZG TYPE TBSL-SHKZG,
         END OF LS_TBSL.
  DATA LT_TBSL LIKE TABLE OF LS_TBSL.

  DATA LV_GL_LINE LIKE LS_ACCOUNTGL-ITEMNO_ACC.

  DATA : LV_CHECK_DUP TYPE C,
         LV_VBELN     TYPE BKPF-BELNR.

  DATA : BEGIN OF LS_T030K,
           MWSKZ TYPE T030K-MWSKZ,
           KONTS TYPE T030K-KONTS,
         END OF LS_T030K.
  DATA LT_T030K LIKE TABLE OF LS_T030K.

  DATA : BEGIN OF LC_CON,
           RCOA TYPE C LENGTH 4 VALUE 'RCOA',
         END OF LC_CON.

  DATA : BEGIN OF LS_TAXRATE,
           MWSKZ TYPE T007A-MWSKZ,
           KBETR TYPE KONP-KBETR,
         END OF LS_TAXRATE.
  DATA LT_TAXRATE LIKE TABLE OF LS_TAXRATE.

  DATA LV_VAT TYPE P DECIMALS 2.

  CLEAR LV_CHECK_DUP.

  SELECT MWSKZ
         KONTS
    FROM T030K
    INTO TABLE LT_T030K
    WHERE KTOPL EQ LC_CON-RCOA.

  SELECT T007A~MWSKZ
         KONP~KBETR
    FROM T007A
    INNER JOIN A003 ON T007A~MWSKZ EQ A003~MWSKZ
    INNER JOIN KONP ON A003~KNUMH EQ KONP~KNUMH AND
                       A003~KSCHL EQ KONP~KSCHL AND
                       A003~KAPPL EQ KONP~KAPPL
    INTO TABLE LT_TAXRATE
    WHERE T007A~MWSKZ EQ GC_CON-VX
      AND T007A~KALSM EQ GC_CON-TAXTH
      AND A003~KAPPL  EQ GC_CON-TX
      AND A003~ALAND  EQ GC_CON-TH.

  PERFORM F_CHECK_DATA USING I_INPUT
                    CHANGING LV_CHECK_DUP
                             LV_VBELN.

  PERFORM F_GET_DEBIT_CREDIT_INDICATOR TABLES LT_TBSL
                                              IT_GL.

  IF LV_CHECK_DUP NE ABAP_TRUE.
*--------------------------------------------------------------------*
* Header
*--------------------------------------------------------------------*
    LV_DOCUMENTHEADER-USERNAME        = I_INPUT-USNAM.
*    LV_DOCUMENTHEADER-HEADER_TXT      = I_INPUT-XBLNR.
    LV_DOCUMENTHEADER-COMP_CODE       = I_INPUT-BUKRS.
    LV_DOCUMENTHEADER-FISC_YEAR       = I_INPUT-GJAHR.
    LV_DOCUMENTHEADER-DOC_DATE        = I_INPUT-BLDAT.
    LV_DOCUMENTHEADER-PSTNG_DATE      = I_INPUT-BUDAT.
    LV_DOCUMENTHEADER-TRANS_DATE      = SY-DATUM.
    LV_DOCUMENTHEADER-FIS_PERIOD      = I_INPUT-MONAT.
    LV_DOCUMENTHEADER-DOC_TYPE        = GC_CON-DOC_TYPE.
    LV_DOCUMENTHEADER-REF_DOC_NO      = I_INPUT-XBLNR.
*    lv_documentheader-ref_doc_no_long = p_xblnr.

*--------------------------------------------------------------------*
* Deletail
*--------------------------------------------------------------------*
    LOOP AT IT_GL INTO LS_GL.
      CLEAR : LS_ACCOUNTPAYABLE,LS_CURRENCYAMOUNT,LS_EXTENSION2,LS_ACCOUNTGL.
      ADD 1 TO LV_GL_LINE.

      LS_ACCOUNTPAYABLE-ITEMNO_ACC = LV_GL_LINE.
      LS_ACCOUNTPAYABLE-VENDOR_NO  = |{ LS_GL-LIFNR ALPHA = IN }|.
      LS_ACCOUNTPAYABLE-BLINE_DATE = LS_GL-ZFBDT.
      LS_ACCOUNTPAYABLE-PMNTTRMS   = LS_GL-ZTERM.
      LS_ACCOUNTPAYABLE-COMP_CODE  = I_INPUT-BUKRS.
*      ls_accountpayable-bus_area   = '1000'.
      "ls_accountreceivable-pstng_date = lv_documentheader-pstng_date.
      "ls_accountreceivable-doc_type   = lv_documentheader-doc_type.
      "ls_accountreceivable-fisc_year  = lv_documentheader-fisc_year.
      "ls_accountreceivable-fis_period = lv_documentheader-fis_period.
      "ls_accountpayable-profit_ctr = 'P101001'.
      LS_ACCOUNTPAYABLE-SP_GL_IND  = LS_GL-UMSKZ.
      LS_ACCOUNTPAYABLE-TAX_CODE   = LS_GL-MWSKZ.
      LS_ACCOUNTPAYABLE-ITEM_TEXT  = LS_GL-SGTXT.
      APPEND LS_ACCOUNTPAYABLE TO LT_ACCOUNTPAYABLE.

      LS_CURRENCYAMOUNT-ITEMNO_ACC  = LS_ACCOUNTPAYABLE-ITEMNO_ACC.
      "ls_currencyamount-curr_type  = '10'.
      LS_CURRENCYAMOUNT-CURRENCY    = I_INPUT-WAERS.
      LS_CURRENCYAMOUNT-EXCH_RATE   = I_INPUT-KURSF.
      IF LS_GL-MWSKZ IS NOT INITIAL.
        LS_CURRENCYAMOUNT-AMT_BASE    = LS_GL-WRBTR.
        LV_VAT                        = LS_GL-WRBTR.
      ENDIF.
      READ TABLE LT_TBSL INTO LS_TBSL
      WITH KEY BSCHL = LS_GL-BSCHL.
      IF     LS_TBSL-SHKZG EQ GC_CON-DEBIT.
        LS_CURRENCYAMOUNT-AMT_DOCCUR = LS_GL-WRBTR.
      ELSEIF LS_TBSL-SHKZG EQ GC_CON-CREDIT.
        LS_CURRENCYAMOUNT-AMT_DOCCUR = ( - LS_GL-WRBTR ).
*        LS_CURRENCYAMOUNT-AMT_DOCCUR = LS_CURRENCYAMOUNT-AMT_DOCCUR * -1.
      ENDIF.

      APPEND LS_CURRENCYAMOUNT TO LT_CURRENCYAMOUNT.

      LS_EXTENSION2-STRUCTURE = GC_CON-ADDITIONAL_FILED.
      CONCATENATE LS_ACCOUNTPAYABLE-ITEMNO_ACC
                  LS_GL-BSCHL
                  GC_CON-BRNCH
                  GC_CON-BUPLA
                  SPACE
             INTO LS_EXTENSION2-VALUEPART1.
      APPEND LS_EXTENSION2 TO LT_EXTENSION2.

      LS_ACCOUNTWT-ITEMNO_ACC = LS_ACCOUNTPAYABLE-ITEMNO_ACC.
      LS_ACCOUNTWT-WT_TYPE    = GC_CON-WT_TYPE.
      APPEND LS_ACCOUNTWT TO LT_ACCOUNTWT.

*      CLEAR: ls_extension, lt_extension.
*      ls_extension-field1 = 'X'.
*      APPEND ls_extension TO lt_extension.

      CLEAR LS_GL.
    ENDLOOP.

    CLEAR : LS_ACCOUNTGL,LS_CURRENCYAMOUNT,LS_EXTENSION2,LS_ACCOUNTGL.
    ADD 1 TO LV_GL_LINE.
    LS_CURRENCYAMOUNT-ITEMNO_ACC  = LV_GL_LINE.
    LS_CURRENCYAMOUNT-CURRENCY    = I_INPUT-WAERS.
    LS_CURRENCYAMOUNT-EXCH_RATE   = I_INPUT-KURSF.
    LS_CURRENCYAMOUNT-AMT_DOCCUR  = 0.
    LS_CURRENCYAMOUNT-AMT_BASE    = LV_VAT.
    LS_CURRENCYAMOUNT-TAX_AMT     = 0.
    APPEND LS_CURRENCYAMOUNT TO LT_CURRENCYAMOUNT.

    LS_ACCOUNTTAX-ITEMNO_ACC = LV_GL_LINE.

    READ TABLE LT_T030K INTO LS_T030K
    WITH KEY MWSKZ = GC_CON-VX.
    IF SY-SUBRC = 0.
      LS_ACCOUNTTAX-GL_ACCOUNT = LS_T030K-KONTS.
    ENDIF.

    LS_ACCOUNTTAX-COND_KEY   = GC_CON-MWVS.
    LS_ACCOUNTTAX-ACCT_KEY   = GC_CON-VST.
    LS_ACCOUNTTAX-TAX_CODE   = GC_CON-VX.
    LS_ACCOUNTTAX-ITEMNO_TAX = GC_CON-STAR.

    READ TABLE LT_TAXRATE INTO LS_TAXRATE
    WITH KEY MWSKZ = GC_CON-VX.
    IF SY-SUBRC = 0.
      LS_ACCOUNTTAX-TAX_RATE = LS_TAXRATE-KBETR / 10.
    ENDIF.

    LS_ACCOUNTTAX-TAX_DATE = SY-DATUM.
*
    APPEND LS_ACCOUNTTAX TO LT_ACCOUNTTAX.

*        LS_EXTENSION2-STRUCTURE = GC_CON-ADDITIONAL_FILED_V2.
*        CONCATENATE LS_CURRENCYAMOUNT-ITEMNO_ACC GC_CON-40 GC_CON-BRNCH GC_CON-BUPLA SPACE INTO LS_EXTENSION2-VALUEPART1 RESPECTING BLANKS.

    LS_EXTENSION2-STRUCTURE = GC_ADDITIONAL_FILED.
    CONCATENATE LS_CURRENCYAMOUNT-ITEMNO_ACC
                GC_CON-40
                GC_CON-BRNCH
                GC_CON-BUPLA
                SPACE
           INTO LS_EXTENSION2-VALUEPART1.
    APPEND LS_EXTENSION2 TO LT_EXTENSION2.

    CALL FUNCTION 'BAPI_ACC_DOCUMENT_POST'
      EXPORTING
        DOCUMENTHEADER = LV_DOCUMENTHEADER
      TABLES
        ACCOUNTGL      = LT_ACCOUNTGL
        ACCOUNTPAYABLE = LT_ACCOUNTPAYABLE
*       accountreceivable   = lt_accountreceivable
        ACCOUNTTAX     = LT_ACCOUNTTAX
        CURRENCYAMOUNT = LT_CURRENCYAMOUNT
        EXTENSION1     = LT_EXTENSION
        RETURN         = LT_RETURN
        EXTENSION2     = LT_EXTENSION2
        ACCOUNTWT      = LT_ACCOUNTWT.

    DATA LS_RETURN_TMP LIKE LS_RETURN.
    LOOP AT LT_RETURN INTO LS_RETURN WHERE TYPE = GC_CON-E.
*    APPEND ls_return-message_v2 TO lt_obj_key.
    ENDLOOP.
    IF SY-SUBRC NE 0.
      READ TABLE LT_RETURN INTO LS_RETURN
      WITH KEY TYPE = GC_CON-S.
      IF SY-SUBRC EQ 0.
        CONCATENATE TEXT-101 LS_RETURN-MESSAGE_V2+0(10) TEXT-102 INTO E_MESSAGE SEPARATED BY SPACE.
        E_OUTPUT   = LS_RETURN-MESSAGE_V2+0(10).
        PERFORM F_COMMIT.
      ENDIF.
    ELSE.
      E_MESSAGE = LS_RETURN-MESSAGE.
    ENDIF.
  ELSE.
    CONCATENATE TEXT-103 I_INPUT-XBLNR TEXT-104 INTO E_MESSAGE SEPARATED BY SPACE.
    E_OUTPUT = LV_VBELN.
  ENDIF.

ENDFUNCTION.
