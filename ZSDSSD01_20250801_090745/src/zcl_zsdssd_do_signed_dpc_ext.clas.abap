class ZCL_ZSDSSD_DO_SIGNED_DPC_EXT definition
  public
  inheriting from ZCL_ZSDSSD_DO_SIGNED_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
protected section.

  methods UPDATESET_CREATE_ENTITY
    redefinition .
private section.
ENDCLASS.



CLASS ZCL_ZSDSSD_DO_SIGNED_DPC_EXT IMPLEMENTATION.


  METHOD /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY.

    DATA: LR_DEEP_ENTITY TYPE ZCL_ZSDSSD_DO_SIGNED_MPC_EXT=>TS_DEEP_ENTITY,
          LT_DATA        TYPE ZSDSSDT024_TT.

    FIELD-SYMBOLS <LFS_OUTPUT> TYPE ANY.

    "Read data
    IO_DATA_PROVIDER->READ_ENTRY_DATA(
    IMPORTING
      ES_DATA = LR_DEEP_ENTITY ).

    LOOP AT LR_DEEP_ENTITY-UPDATEXDATA ASSIGNING FIELD-SYMBOL(<LFS_UPDDATA>).
      APPEND INITIAL LINE TO LT_DATA ASSIGNING FIELD-SYMBOL(<LFS_DATA>).
      MOVE-CORRESPONDING <LFS_UPDDATA> TO <LFS_DATA>.
    ENDLOOP.

    CALL FUNCTION 'Z_SDSSD_DO_SIGNED'
      CHANGING
        ET_DATA = LT_DATA.

    ASSIGN LR_DEEP_ENTITY TO <LFS_OUTPUT>.

    COPY_DATA_TO_REF(
      EXPORTING
        IS_DATA = <LFS_OUTPUT>
      CHANGING
        CR_DATA = ER_DEEP_ENTITY
    ).

  ENDMETHOD.


  METHOD UPDATESET_CREATE_ENTITY.
**TRY.
*CALL METHOD SUPER->UPDATESET_CREATE_ENTITY
*  EXPORTING
*    IV_ENTITY_NAME          =
*    IV_ENTITY_SET_NAME      =
*    IV_SOURCE_NAME          =
*    IT_KEY_TAB              =
**    IO_TECH_REQUEST_CONTEXT =
*    IT_NAVIGATION_PATH      =
**    IO_DATA_PROVIDER        =
**  IMPORTING
**    ER_ENTITY               =
*    .
**  CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
**  CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
**ENDTRY.


    BREAK-POINT.

  ENDMETHOD.
ENDCLASS.
