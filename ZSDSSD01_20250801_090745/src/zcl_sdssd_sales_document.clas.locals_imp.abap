*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS LCL_DATA DEFINITION.
  PUBLIC SECTION.
    CONSTANTS : BEGIN OF GC_CON,
                  S TYPE C LENGTH 1 VALUE 'S',
                  E TYPE C LENGTH 1 VALUE 'E',
                END OF GC_CON.

    TYPES : LY_LINE TYPE TABLE OF ZSDSSDS127 WITH EMPTY KEY.

    TYPES : LY_LINE_QTY TYPE TABLE OF ZSDSSDS128 WITH EMPTY KEY.

    METHODS :
      CONSTRUCTOR.

    CLASS-METHODS :
      CALL_UPDATE_CANCEL_CONF_QTY IMPORTING I_DATA   LIKE ZCL_SDSSD_SALES_DOCUMENT=>GY_SCHDULE_LINE
                                  RETURNING VALUE(R) TYPE ZSDSSDS124_TT,
      GET_SCHDULE_LINE IMPORTING I_DATA   TYPE LY_LINE
                       RETURNING VALUE(R) LIKE ZCL_SDSSD_SALES_DOCUMENT=>GTY_SCHDULE_LINE,
      GET_SCHDULE_LINE_QTY IMPORTING I_DATA   TYPE LY_LINE_QTY
                           RETURNING VALUE(R) LIKE ZCL_SDSSD_SALES_DOCUMENT=>GTY_SCHDULE_LINE_QTY,
      CALL_UPDATE_CONF_QTY IMPORTING I_DATA   LIKE ZCL_SDSSD_SALES_DOCUMENT=>GY_SCHDULE_LINE_QTY
                           RETURNING VALUE(R) TYPE ZSDSSDS124_TT,
      SET_DELIVERY_BLOCK IMPORTING I_DATA LIKE ZCL_SDSSD_SALES_DOCUMENT=>GY_SCHDULE_LINE.

ENDCLASS.
CLASS LCL_DATA IMPLEMENTATION.
  METHOD CONSTRUCTOR.

  ENDMETHOD.
  METHOD CALL_UPDATE_CANCEL_CONF_QTY.
    DATA : LT_KORTAB TYPE TABLE OF MDVU,
           LT_RETURN TYPE TABLE OF BAPIRET2.

    DATA : LS_KORTAB TYPE MDVU.

    DATA : LS_R TYPE ZSDSSDS124.

    LS_KORTAB-VBELN = I_DATA-VBELN.
    LS_KORTAB-POSNR = I_DATA-POSNR.
    LS_KORTAB-MBDAT = I_DATA-EDATU.
    LS_KORTAB-VMENG = 0.
    APPEND LS_KORTAB TO LT_KORTAB.
    TRY.
        SET UPDATE TASK LOCAL.
        CALL FUNCTION 'Z_SDSSD_BACKORDER_UPDATE' IN UPDATE TASK
          EXPORTING
            COMMIT_EXTERNAL = ABAP_TRUE
          TABLES
            KORTAB          = LT_KORTAB
            ET_RETURN       = LT_RETURN
          EXCEPTIONS
            ERROR_MESSAGE   = 1
            OTHERS          = 2.
      CATCH CX_SY_DYN_CALL_ILLEGAL_FUNC INTO DATA(LX_ILLEGAL_FUNC).
        MESSAGE LX_ILLEGAL_FUNC->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
      CATCH CX_SY_NO_HANDLER INTO DATA(LX_NO_HANDLER).
        MESSAGE LX_NO_HANDLER->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
      CATCH CX_ROOT INTO DATA(LX_ROOT).
        MESSAGE LX_ROOT->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
    ENDTRY.
    IF LT_RETURN IS INITIAL.
      COMMIT WORK AND WAIT.
      LS_R-VBELN = I_DATA-VBELN.
      LS_R-STATU = GC_CON-S.
      LS_R-MESSG = TEXT-S01.
      APPEND LS_R TO R.
    ELSE.
      READ TABLE LT_RETURN INTO DATA(LS_RETURN) INDEX 1.
      IF SY-SUBRC EQ 0.
        LS_R-VBELN = I_DATA-VBELN.
        LS_R-STATU = GC_CON-E.
        LS_R-MESSG = LS_RETURN-MESSAGE.
        APPEND LS_R TO R.
      ENDIF.
    ENDIF.

  ENDMETHOD.
  METHOD GET_SCHDULE_LINE.
    SELECT VBEP~VBELN,
           VBEP~POSNR,
           VBEP~ETENR,
           VBEP~EDATU
      FROM @I_DATA AS A
      INNER JOIN VBEP ON A~VBELN EQ VBEP~VBELN AND
                         A~POSNR EQ VBEP~POSNR
      INTO TABLE @R.
  ENDMETHOD.
  METHOD GET_SCHDULE_LINE_QTY.
    SELECT VBEP~VBELN,
           VBEP~POSNR,
           VBEP~ETENR,
           VBEP~EDATU,
           A~BMENG
      FROM @I_DATA AS A
      INNER JOIN VBEP ON A~VBELN EQ VBEP~VBELN AND
                         A~POSNR EQ VBEP~POSNR AND
                         A~ETENR EQ VBEP~ETENR
      INTO TABLE @R.

  ENDMETHOD.
  METHOD CALL_UPDATE_CONF_QTY.
    DATA : LT_KORTAB TYPE TABLE OF MDVU,
           LT_RETURN TYPE TABLE OF BAPIRET2.

    DATA : LS_KORTAB TYPE MDVU.

    DATA : LS_R TYPE ZSDSSDS124.

    LS_KORTAB-VBELN = I_DATA-VBELN.
    LS_KORTAB-POSNR = I_DATA-POSNR.
    LS_KORTAB-MBDAT = I_DATA-EDATU.
    LS_KORTAB-VMENG = I_DATA-BMENG.
    APPEND LS_KORTAB TO LT_KORTAB.

    TRY.
        SET UPDATE TASK LOCAL.
        CALL FUNCTION 'Z_SDSSD_BACKORDER_UPDATE' IN UPDATE TASK
          EXPORTING
            COMMIT_EXTERNAL = ABAP_TRUE
*           SD_READ_AND_SAVE = SPACE
          TABLES
            KORTAB          = LT_KORTAB
            ET_RETURN       = LT_RETURN
          EXCEPTIONS
            ERROR_MESSAGE   = 1
            OTHERS          = 2.
      CATCH CX_SY_DYN_CALL_ILLEGAL_FUNC INTO DATA(LX_ILLEGAL_FUNC).
        MESSAGE LX_ILLEGAL_FUNC->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
      CATCH CX_SY_NO_HANDLER INTO DATA(LX_NO_HANDLER).
        MESSAGE LX_NO_HANDLER->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
      CATCH CX_ROOT INTO DATA(LX_ROOT).
        MESSAGE LX_ROOT->GET_TEXT( ) TYPE 'S' DISPLAY LIKE 'E'.
    ENDTRY.

    IF LT_RETURN IS INITIAL.
      COMMIT WORK AND WAIT.
      LS_R-VBELN = I_DATA-VBELN.
      LS_R-STATU = GC_CON-S.
      LS_R-MESSG = TEXT-S01.
      APPEND LS_R TO R.
    ELSE.
      READ TABLE LT_RETURN INTO DATA(LS_RETURN) INDEX 1.
      IF SY-SUBRC EQ 0.
        LS_R-VBELN = I_DATA-VBELN.
        LS_R-STATU = GC_CON-E.
        LS_R-MESSG = LS_RETURN-MESSAGE.
        APPEND LS_R TO R.
      ENDIF.
    ENDIF.
  ENDMETHOD.
  METHOD SET_DELIVERY_BLOCK.

    DATA: LT_SCHEDULE_LINES   TYPE TABLE OF BAPISCHDL,
          LT_SCHEDULE_LINESX  TYPE TABLE OF BAPISCHDLX,
          LS_SALESDOCUMENT    TYPE BAPIVBELN-VBELN,
          LS_ORDER_HEADER_INX TYPE BAPISDH1X,
          LT_RETURN           TYPE TT_BAPIRET2.

    DATA: LS_SCHEDULE_LINES  TYPE BAPISCHDL,
          LS_SCHEDULE_LINESX TYPE BAPISCHDLX.

    LS_SALESDOCUMENT               = I_DATA-VBELN.
    LS_ORDER_HEADER_INX-UPDATEFLAG = 'U'.

    LS_SCHEDULE_LINES-ITM_NUMBER = I_DATA-POSNR.
    LS_SCHEDULE_LINES-SCHED_LINE = I_DATA-ETENR.
    LS_SCHEDULE_LINES-REQ_DLV_BL = 'Z1'.
    APPEND LS_SCHEDULE_LINES TO LT_SCHEDULE_LINES.

    LS_SCHEDULE_LINESX-ITM_NUMBER = I_DATA-POSNR.
    LS_SCHEDULE_LINESX-SCHED_LINE = I_DATA-ETENR.
    LS_SCHEDULE_LINESX-UPDATEFLAG = 'U'.
    LS_SCHEDULE_LINESX-REQ_DLV_BL = ABAP_TRUE.
    APPEND LS_SCHEDULE_LINESX TO LT_SCHEDULE_LINESX.

    CALL FUNCTION 'BAPI_SALESORDER_CHANGE' "#EC CI_USAGE_OK[2438131]
      EXPORTING
        SALESDOCUMENT    = LS_SALESDOCUMENT
        ORDER_HEADER_INX = LS_ORDER_HEADER_INX
      TABLES
        RETURN           = LT_RETURN
        SCHEDULE_LINES   = LT_SCHEDULE_LINES
        SCHEDULE_LINESX  = LT_SCHEDULE_LINESX.

    COMMIT WORK AND WAIT.
  ENDMETHOD.
ENDCLASS.
