class ZCL_IM_SDS_AUTH_CHECK_VPRS definition
  public
  final
  create public .

public section.

  interfaces IF_BADI_INTERFACE .
  interfaces IF_EX_PRICING_AUTHORITY_CHECK .
protected section.
private section.
ENDCLASS.



CLASS ZCL_IM_SDS_AUTH_CHECK_VPRS IMPLEMENTATION.


METHOD IF_EX_PRICING_AUTHORITY_CHECK~CHECK_CONDITION_LINE.

  CONSTANTS :
    LC_REPID     TYPE PROGRAMM VALUE 'ZCL_IM_SDS_AUTH_CHECK_VPRS',
    LC_KALSM_STD TYPE ZSDSDE_PARAM_EXT VALUE 'ZSDS01',
    LC_KALSM_CN  TYPE ZSDSDE_PARAM_EXT VALUE 'ZSDS04'.

  DATA :
    LRT_VKORG TYPE RANGE OF KOMK-VKORG,
    LRT_TCODE TYPE RANGE OF SY-TCODE,
    LRT_KSCHL TYPE RANGE OF T683S-KSCHL,
    LRT_STD   TYPE RANGE OF T683S-STUNR,
    LRT_CN    TYPE RANGE OF T683S-STUNR.

  ASSIGN ('(SAPLV69A)FCODE') TO FIELD-SYMBOL(<LFS_FCODE>).
  IF <LFS_FCODE> IS ASSIGNED.
    IF <LFS_FCODE> EQ 'PROT'.
      RETURN.
    ENDIF.
  ENDIF.

  ZCL_SDSCA_UTILITIES=>GET_GEN_C_RANGE(
    EXPORTING
      IF_REPID = LC_REPID
      IF_PARAM = 'VKORG'
    IMPORTING
      ET_RANGE = LRT_VKORG ).

  IF LRT_VKORG IS INITIAL.
    RETURN.
  ENDIF.

  IF I_KOMK-VKORG NOT IN LRT_VKORG.
    RETURN.
  ENDIF.

  ZCL_SDSCA_UTILITIES=>GET_GEN_C_RANGE(
    EXPORTING
      IF_REPID = LC_REPID
      IF_PARAM = 'TCODE'
    IMPORTING
      ET_RANGE = LRT_TCODE ).

  IF LRT_TCODE IS INITIAL.
    RETURN.
  ENDIF.

  IF SY-TCODE NOT IN LRT_TCODE.
    RETURN.
  ENDIF.

  ZCL_SDSCA_UTILITIES=>GET_GEN_C_RANGE(
    EXPORTING
      IF_REPID = LC_REPID
      IF_PARAM = 'KSCHL'
    IMPORTING
      ET_RANGE = LRT_KSCHL ).

  IF LRT_KSCHL IS NOT INITIAL.
    IF I_KOMV-KSCHL IN LRT_KSCHL.
      C_NO_AUTHORITY = ABAP_TRUE.
    ENDIF.
  ENDIF.

  IF I_KOMK-KALSM EQ LC_KALSM_STD.
    ZCL_SDSCA_UTILITIES=>GET_GEN_C_RANGE(
      EXPORTING
        IF_REPID = LC_REPID
        IF_PARAM = 'STUNR'
        IF_EXT   = LC_KALSM_STD
      IMPORTING
        ET_RANGE = LRT_STD ).

    IF LRT_STD IS NOT INITIAL.
      IF I_KOMV-STUNR IN LRT_STD.
        C_NO_AUTHORITY = ABAP_TRUE.
      ENDIF.
    ENDIF.
  ENDIF.

  IF I_KOMK-KALSM EQ LC_KALSM_CN.
    ZCL_SDSCA_UTILITIES=>GET_GEN_C_RANGE(
      EXPORTING
        IF_REPID = LC_REPID
        IF_PARAM = 'STUNR'
        IF_EXT   = LC_KALSM_CN
      IMPORTING
        ET_RANGE = LRT_CN ).

    IF LRT_CN IS NOT INITIAL.
      IF I_KOMV-STUNR IN LRT_CN.
        C_NO_AUTHORITY = ABAP_TRUE.
      ENDIF.
    ENDIF.
  ENDIF.

ENDMETHOD.
ENDCLASS.
