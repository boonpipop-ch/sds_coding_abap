FUNCTION Z_SDSCM_UPDATE_WARRANTY.
*"----------------------------------------------------------------------
*"*"Local Interface:
*"  EXPORTING
*"     VALUE(E_TYPE) TYPE  CHAR1
*"     VALUE(E_MESSAGE) TYPE  CHAR255
*"  TABLES
*"      T_INPUT STRUCTURE  ZSDSCMT004 OPTIONAL
*"----------------------------------------------------------------------
  DATA : LS_ZSDSCMT003 TYPE ZSDSCMT003,
         LT_ZSDSCMT003 TYPE TABLE OF ZSDSCMT003 WITH EMPTY KEY.

  DATA : LT_DATA TYPE TABLE OF ZSDSCMT004 WITH EMPTY KEY.

  DATA : LV_REQ TYPE ZSDSCMT004-ZRUNING.

  LT_DATA = T_INPUT[].

  SELECT B~ZRUNING,
         B~MATNR,
         B~SERNR
    FROM @LT_DATA AS A
    INNER JOIN ZSDSCMT004 AS B ON A~MATNR EQ B~MATNR AND
                                  A~SERNR EQ B~SERNR
    WHERE B~ZRUNING EQ ( SELECT MAX( ZRUNING )
                           FROM ZSDSCMT004
                          WHERE MATNR EQ B~MATNR AND
                                SERNR EQ B~SERNR )
    INTO TABLE @DATA(LT_ZSDSCMT004).

  DATA LS_ZSDSCMT004 LIKE LINE OF LT_ZSDSCMT004.

  LOOP AT T_INPUT INTO DATA(LS_INPUT).
    UPDATE ZSDSCMT003 SET CUS_REG_BEG = LS_INPUT-REGISD
                          UPDFLG      = ABAP_TRUE
                          CUS_REG_END = LS_INPUT-WARENDD
                    WHERE MATNR EQ LS_INPUT-MATNR
                      AND SERNR EQ LS_INPUT-SERNR.

    READ TABLE LT_ZSDSCMT004 INTO LS_ZSDSCMT004
    WITH KEY MATNR = LS_INPUT-MATNR
             SERNR = LS_INPUT-SERNR.
    IF SY-SUBRC EQ 0.
      LS_INPUT-ZRUNING = LS_ZSDSCMT004-ZRUNING + 1.
    ELSE.
      LS_INPUT-ZRUNING = 1.
    ENDIF.

    INSERT ZSDSCMT004 FROM LS_INPUT.
    IF SY-SUBRC NE 0.
      SELECT MAX( ZRUNING )
        FROM ZSDSCMT004
        INTO LV_REQ
        WHERE MATNR = LS_INPUT-MATNR
          AND SERNR = LS_INPUT-SERNR.

      LS_INPUT-ZRUNING = LV_REQ + 1.
      INSERT ZSDSCMT004 FROM LS_INPUT.
    ENDIF.

    COMMIT WORK AND WAIT.
  ENDLOOP.

  E_TYPE    = 'S'.
  E_MESSAGE = 'Data have been saved'.

ENDFUNCTION.
