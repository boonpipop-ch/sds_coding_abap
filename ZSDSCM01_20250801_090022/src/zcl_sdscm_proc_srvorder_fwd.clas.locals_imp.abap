*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS LCL_CRMS4_PROC_SRVORDER_HELPER IMPLEMENTATION.

  METHOD GET_INSTANCE.

    IF MO_SRVORDER_FWD_HELPER IS   NOT BOUND.
      MO_SRVORDER_FWD_HELPER = NEW LCL_CRMS4_PROC_SRVORDER_HELPER(  ).
    ENDIF.
    RO_SRVORDER_FWD_HELPER = MO_SRVORDER_FWD_HELPER.

  ENDMETHOD.


  METHOD LIF_CRMS4_SRVORDER_FWD_HELPER~GET_STORAGE_LOCATION_PLANT.

    DATA: LR_CRMS4_PROCESS_FWD TYPE REF TO CL_CRMS4_PROCESS_FWD.
    LR_CRMS4_PROCESS_FWD =  NEW CL_CRMS4_PROCESS_FWD( ).

    CALL METHOD LR_CRMS4_PROCESS_FWD->GET_STORAGE_LOCATION_PLANT
      EXPORTING
        IS_ORDERADM_I            = IS_ORDERADM_I
        IT_ORGMAN                = IT_ORGMAN
        IT_PARTNERS              = IT_PARTNERS
      IMPORTING
        EV_INDV_PLANT            = EV_INDV_PLANT
        EV_PLANT                 = EV_PLANT
        EV_STORAGE_LOCATION      = EV_STORAGE_LOCATION
        EV_INDV_STORAGE_LOCATION = EV_INDV_STORAGE_LOCATION
        ET_RETURN                = ET_RETURN.
  ENDMETHOD.

  METHOD LIF_CRMS4_SRVORDER_FWD_HELPER~HANDLE_RECO.
    DATA: LT_TASK_INFO               TYPE CRMT_SRV_LOG_TASK_INFO_T,
          LS_SRV_DATA_BTX            TYPE  CRMS4S_DATAEXCH_BTX,
          LT_SRV_DATA_BTX            TYPE  CRMS4S_DATAEXCH_BTX,
          LT_SRV_DATA_BTX_ORDERADM_I TYPE CRMT_ORDERADM_I_WRKT,
          LT_ORGMAN                  TYPE CRMT_ORGMAN_WRKT,
          LT_PARTNER                 TYPE CRMT_PARTNER_EXTERNAL_WRKT,
          LS_ITEM_ERROR              TYPE CRMS4S_BIL_ERRORS,
          LT_HANDLER_MSG             TYPE IF_CRMS4_RECO_HANDLER=>ERROR_MESSAGE_TAB,
          LTAB_RETURN_MESSAGES       TYPE   IF_CRMS4_RECO_HANDLER=>ERROR_MESSAGE_TAB.

    DATA : LR_RECO_HANDLER TYPE REF TO IF_CRMS4_RECO_HANDLER.
    DATA: LS_ITEM_ERRORS TYPE CRMS4S_BIL_ERRORS.
    DATA: LR_CRMS4_RECO_HANDLER_FACTORY TYPE REF TO  IF_CRMS4_RECO_HANDLER_FACTORY,
          LR_RECO                       TYPE REF TO IF_CRMS4_RECO_HANDLER.

    IF IT_SERVICE_DATA IS NOT INITIAL.
      LR_CRMS4_RECO_HANDLER_FACTORY =    CL_CRMS4_RECO_HANDLER_FACTORY=>GET_FACTORY( ).
      IF  LR_CRMS4_RECO_HANDLER_FACTORY IS NOT INITIAL.
        LR_RECO_HANDLER = LR_CRMS4_RECO_HANDLER_FACTORY->GET_RECO_HANDLER( ).
      ENDIF.

      IF LR_RECO_HANDLER IS NOT INITIAL.
        CALL METHOD LR_RECO_HANDLER->PREPARE(
          EXPORTING
            IT_SERVICE_DATA                = IT_SERVICE_DATA
          IMPORTING
            ET_REQUIREMENTS_CREATE         = DATA(LT_REQUIREMENTS_CREATE)
            ET_REQUIREMENTS_UPDATE         = DATA(LT_REQUIREMENTS_UPDATE)
            ET_UPDATE_FINAL_ISSUE          = DATA(LT_REQUIREMENTS_FINAL_ISSUE)
            ET_REQUIREMENTS_DELETE         = DATA(LT_REQUIREMENTS_DELETE)
            ET_REQUIREMENTS_ACCOUNT_UPDATE = DATA(LT_REQUIREMENTS_ACCOUNT_UPDATE)
            ET_RETURN                      = LT_HANDLER_MSG ).

        CALL METHOD LR_RECO_HANDLER->PERFORM(
          EXPORTING
            IT_REQUIREMENTS_CREATE_TAB   = LT_REQUIREMENTS_CREATE
            IT_REQUIREMENTS_UPDATE_TAB   = LT_REQUIREMENTS_UPDATE
            IT_REQUIREMENTS_DELETE_TAB   = LT_REQUIREMENTS_DELETE
            IT_RESERVATIONS_FINAL_ISSUE  = LT_REQUIREMENTS_FINAL_ISSUE
            IT_ACCOUNT_ASSIGNMENT_UPDATE = LT_REQUIREMENTS_ACCOUNT_UPDATE
          IMPORTING
            ET_RETURN_MESSAGES           = DATA(LT_RETURN_RECO_MESSAGES)
            ET_RESULT_TAB                = ET_RESULT_TAB ).

        CALL METHOD LR_RECO_HANDLER->PROCESS(
          EXPORTING
            IT_RETURN_MESSAGES = LT_RETURN_RECO_MESSAGES
            IT_SRV_DATA        = IT_SERVICE_DATA
          IMPORTING
            ET_RETURN          = LTAB_RETURN_MESSAGES ).

        APPEND LINES OF LT_HANDLER_MSG TO LTAB_RETURN_MESSAGES.
        APPEND LINES OF LTAB_RETURN_MESSAGES TO ET_RETURN.

      ENDIF.
    ENDIF.
  ENDMETHOD.

  METHOD LIF_CRMS4_SRVORDER_FWD_HELPER~GET_PARENT_ITEM_DETAILS.
    CALL FUNCTION 'CRM_ORDERADM_I_READ_OB'
      EXPORTING
        IV_GUID           = IV_PARENT_ITEM_GUID
      IMPORTING
        ES_ORDERADM_I_WRK = ES_ORDERADM_I_WRK
      EXCEPTIONS
        OTHERS            = 0.
  ENDMETHOD.

  METHOD LIF_CRMS4_SRVORDER_FWD_HELPER~GET_SRV_DATES_FROM_DB.
    CALL FUNCTION 'CRM_DATES_READ_DB'
      EXPORTING
        IV_REF_GUID = IV_REF_GUID
        IV_REF_KIND = 'B'
      IMPORTING
        ET_DATE_DB  = ET_DATE_DB
      EXCEPTIONS
        OTHERS      = 0.

  ENDMETHOD.

  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~DO_DATE_VALIDATION.
    DATA: LR_UTILITY TYPE REF TO IF_CRMS4_RECO_UTILITY.
    LR_UTILITY  = NEW CL_CRMS4_RECO_UTILITY( ).
    IF LR_UTILITY IS BOUND.
      LR_UTILITY->DATE_CHECK( EXPORTING IV_REQUESTED_END_DATETIME   = IV_REQUESTED_END_DATETIME
                                        IV_REQUESTED_START_DATETIME = IV_REQUESTED_START_DATETIME
                              IMPORTING EV_RESERVATION_REQ_DATETIME = EV_RESERVATION_REQ_DATETIME
                                        ES_RETURN                   = ES_RETURN
                                       ).

    ENDIF.
  ENDMETHOD.
  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~CHECK_RECO_SCENARIO_EXISTS.

    IR_RECO_UTIL->CHECK_RECO_SCENARIO_EXISTS(
      EXPORTING
        IV_PROCESS_TYPE                = IV_PROCESS_TYPE
        IV_ITEM_TYPE                   = IV_ITEM_TYPE
      IMPORTING
        EV_RECO_LIFE_STATUS_IN_PROCESS = EV_RECO_LIFE_STATUS_IN_PROCESS
        EV_RECO_LIFE_STATUS_RELEASED   = EV_RECO_LIFE_STATUS_RELEASED
      RECEIVING
        RV_RECO_SCENARIO_FOUND         = RV_RECO_SCENARIO_FOUND ).


*    check_reco_scenario_exists(
*              EXPORTING
*                iv_process_type                =
*           iv_item_type                   =
*           IMPORTING
*            ev_reco_life_status_in_process = lv_reco_life_status_in_process
*            ev_reco_life_status_released   = lv_reco_life_status_released ) <>  abap_true." to handle the Not Required flag
*          CONTINUE.
*        ENDIF.



  ENDMETHOD.


  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~CHECK_STATUS.
    IR_RECO_UTIL->CHECK_STATUS(
      EXPORTING
        IV_GUID          = IV_GUID              " GUID of a CRM Order Object
        IV_BYPASS_BUFFER = IV_BYPASS_BUFFER            " 'Read Status from Database (Avoid Buffer)' Flag
        IV_STATUS        = IV_STATUS               " Object Status
      RECEIVING
        RV_SUBRC         = RV_SUBRC              " ABAP System Field: Return Code of ABAP Statements
    ).

  ENDMETHOD.


  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~DETERMINE_CHECKING_RULE.
    IR_RECO_UTIL->DETERMINE_CHECKING_RULE(
      EXPORTING
        IV_GOODS_MOVEMENT_DONE = IV_GOODS_MOVEMENT_DONE                " Goods movement for reservation allowed
      CHANGING
        CS_SRV_DATA            = CS_SRV_DATA
    ).

  ENDMETHOD.

  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~GET_DELETED_RECO_ITEMS.
    IR_RECO_UTIL->GET_DELETED_RECO_ITEMS(
      EXPORTING
        IV_HEADER_GUID           = IV_HEADER_GUID               " GUID of a CRM Order Object
      IMPORTING
        ET_DELETED_ITEMS         = ET_DELETED_ITEMS                " Item: Database + Dynamic Part
        ET_DELETED_ITEMS_DOCFLOW = ET_DELETED_ITEMS_DOCFLOW              " Table type: object reference
    ).



  ENDMETHOD.
  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~DELTA_HANDLE.

    IR_RECO_UTIL->DELTA_HANDLE(
      EXPORTING
        IS_SRV_DATA          = IS_SRV_DATA
      IMPORTING
        EV_PLANT_CHANGED     = EV_PLANT_CHANGED
        EV_DATE_CHANGED      = EV_DATE_CHANGED
      RECEIVING
        RV_DELTA_UPDATE_TRUE = RV_DELTA_UPDATE_TRUE
    ).

  ENDMETHOD.

  METHOD  LIF_CRMS4_SRVORDER_FWD_HELPER~GET_RESERVATION_DETAILS.
    IR_RECO_UTIL->GET_RESERVATION_DETAILS(
      EXPORTING
        IV_RESERVATION_NUMBER  = IV_RESERVATION_NUMBER                " Number of reservation/dependent requirements
        IV_RESERVATION_ITEM_NO = IV_RESERVATION_ITEM_NO                " Item Number of Reservation / Dependent Requirements
      IMPORTING
        ES_RESERVATION_DETAILS = ES_RESERVATION_DETAILS               " Plant Table for National (Centrally Agreed) Contracts
    ).


  ENDMETHOD.


ENDCLASS.

CLASS LCL_CRMS4_LOGINT_UTIL IMPLEMENTATION.

  METHOD LIF_CRMS4_LOGINT_UTIL~IS_ADV_SHIPMENT_ACT.

    CL_CRMS4_LOGINT_UTIL=>IS_ADV_SHIPMENT_ACT(
      EXPORTING
        IV_ITEM_GUID        = IV_ITEM_GUID                " GUID of a CRM Order Object
      RECEIVING
        RV_LOG_SCENARIO_SUB = RV_LOG_SCENARIO_SUB ).                " Service: Customizing Table for Logistics Scenarios

  ENDMETHOD.

ENDCLASS.

CLASS LCL_ADV_SHIPMENT IMPLEMENTATION.
  METHOD LIF_ADV_SHIPMENT~IS_ADV_SHIPMENT_ACT.
    RV_LOG_SCENARIO_SUB = CL_CRMS4_LOGINT_UTIL=>IS_ADV_SHIPMENT_ACT( IV_ITEM_GUID = IV_ITEM_GUID ).
  ENDMETHOD.
ENDCLASS.
