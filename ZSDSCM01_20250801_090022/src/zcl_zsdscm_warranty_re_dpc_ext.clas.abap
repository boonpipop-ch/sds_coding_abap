class ZCL_ZSDSCM_WARRANTY_RE_DPC_EXT definition
  public
  inheriting from ZCL_ZSDSCM_WARRANTY_RE_DPC
  create public .

public section.

  methods /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY
    redefinition .
protected section.

  methods UPDATESET_GET_ENTITYSET
    redefinition .
  methods UPDATESET_GET_ENTITY
    redefinition .
private section.
ENDCLASS.



CLASS ZCL_ZSDSCM_WARRANTY_RE_DPC_EXT IMPLEMENTATION.


  METHOD /IWBEP/IF_MGW_APPL_SRV_RUNTIME~CREATE_DEEP_ENTITY.

    DATA: LR_DEEP_ENTITY TYPE ZCL_ZSDSCM_WARRANTY_RE_MPC_EXT=>TS_DEEP_ENTITY,
          LT_INPUT       TYPE STANDARD TABLE OF ZSDSCMT004,
          LV_MSG_TYP     TYPE CHAR01,
          LV_MES_TXT     TYPE CHAR255.

    FIELD-SYMBOLS <LFS_DATA> TYPE ANY.

    "Read data
    IO_DATA_PROVIDER->READ_ENTRY_DATA(
    IMPORTING
      ES_DATA = LR_DEEP_ENTITY ).

    LOOP AT LR_DEEP_ENTITY-UPDATEXDATA ASSIGNING FIELD-SYMBOL(<LFS_UPDDATA>).
      APPEND INITIAL LINE TO LT_INPUT ASSIGNING FIELD-SYMBOL(<LFS_INPUT>).
      MOVE-CORRESPONDING <LFS_UPDDATA> TO <LFS_INPUT>.
    ENDLOOP.

    CALL FUNCTION 'Z_SDSCM_UPDATE_WARRANTY'
      IMPORTING
        E_TYPE    = LV_MSG_TYP
        E_MESSAGE = LV_MES_TXT
      TABLES
        T_INPUT   = LT_INPUT.

    LR_DEEP_ENTITY-UPDATEXRETURN-TYPE     = LV_MSG_TYP.
    LR_DEEP_ENTITY-UPDATEXRETURN-MESSAGE  = LV_MES_TXT.

    ASSIGN LR_DEEP_ENTITY TO <LFS_DATA>.

    COPY_DATA_TO_REF(
      EXPORTING
        IS_DATA = <LFS_DATA>
      CHANGING
        CR_DATA = ER_DEEP_ENTITY
    ).

  ENDMETHOD.


  method UPDATESET_GET_ENTITY.
**TRY.
*CALL METHOD SUPER->UPDATESET_GET_ENTITY
*  EXPORTING
*    IV_ENTITY_NAME          =
*    IV_ENTITY_SET_NAME      =
*    IV_SOURCE_NAME          =
*    IT_KEY_TAB              =
**    IO_REQUEST_OBJECT       =
**    IO_TECH_REQUEST_CONTEXT =
*    IT_NAVIGATION_PATH      =
**  IMPORTING
**    ER_ENTITY               =
**    ES_RESPONSE_CONTEXT     =
*    .
**  CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
**  CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
**ENDTRY.
*    BREAK-POINT.
  endmethod.


  METHOD UPDATESET_GET_ENTITYSET.
*    TRY.
*        CALL METHOD SUPER->UPDATESET_GET_ENTITYSET
*          EXPORTING
*            IV_ENTITY_NAME           = IV_ENTITY_NAME
*            IV_ENTITY_SET_NAME       = IV_ENTITY_SET_NAME
*            IV_SOURCE_NAME           = IV_SOURCE_NAME
*            IT_FILTER_SELECT_OPTIONS = IT_FILTER_SELECT_OPTIONS
*            IS_PAGING                = IS_PAGING
*            IT_KEY_TAB               = IT_KEY_TAB
*            IT_NAVIGATION_PATH       = IT_NAVIGATION_PATH
*            IT_ORDER                 = IT_ORDER
*            IV_FILTER_STRING         = IV_FILTER_STRING
*            IV_SEARCH_STRING         = IV_SEARCH_STRING
*            IO_TECH_REQUEST_CONTEXT  = IO_TECH_REQUEST_CONTEXT
*          IMPORTING
*            ET_ENTITYSET             = ET_ENTITYSET
*            ES_RESPONSE_CONTEXT      = ES_RESPONSE_CONTEXT.
*      CATCH /IWBEP/CX_MGW_BUSI_EXCEPTION.
*      CATCH /IWBEP/CX_MGW_TECH_EXCEPTION.
*    ENDTRY.


*    APPEND INITIAL LINE TO ET_ENTITYSET[] ASSIGNING FIELD-SYMBOL(<LFS_TEST>).
*    BREAK-POINT.
  ENDMETHOD.
ENDCLASS.
